# clear the workspace
rm(list = ls())

# load the necessary package
library(dplyr)

# load the dataset package
library(nycflights13)

# check out the available dataset in this package
data(package = "nycflights13")
# result: 
## airlines - airline names
## airports - Airport metadata
## flights - Flights data
## planes -- Plane metadata.
## weather -- Hourly weather data

df = flights # storing the flights data in a dataset called df

# Which airlines have the most flights departing from NYC airports in 2013? 
# Make a table that lists these in descending order of frequency 
# and shows the number of flights for each airline. 
# mention the names of the airlines as well

# join the dataset df with airline names
df1 <- df %>%
  left_join(airlines, by = "carrier")
# now the df1 dataset has column for airlines name
df1 %>% 
  count(name) %>% 
  arrange(desc(n))
# or if you also need the carrier code can also use this
#df1 %>% 
  #count(carrier) %>% 
  #arrange(desc(n)) %>% 
  #inner_join(airlines, by = "carrier")

# Consider only flights that have non-missing arrival delay information. 
# Use summarise and group_by to find which carrier had the highest 
# mean arrival delay? 
# Which carrier had the lowest mean arrival delay? 
# Make sure that your answer includes the name of the carrier 
# and the calculated mean delay.
df1 %>%
  filter(!is.na(arr_delay)) %>% 
  group_by(carrier) %>% 
  summarise(mean_arr_delay = mean(arr_delay)) %>%
  inner_join(airlines, by = "carrier") %>% 
  arrange(desc(mean_arr_delay))
  #in the end can also add slice(c(1,n())) and this will show only the first 
  #and last row of the summary

# Find the flight with the longest air time.
# How long is this flight? 
# Join with the planes table and find out what city did it fly to? 
# How many seats does the plane that flew this flight have?
df1 %>% 
  arrange(desc(air_time)) %>% 
  slice(1) %>% 
  select(air_time, dest, tailnum) %>% 
  inner_join(planes, by = "tailnum") %>% 
  select(air_time, dest, tailnum, seats)
